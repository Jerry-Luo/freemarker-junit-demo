<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>freemarker-and-junit5-demo</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.7.2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.31</version>
        </dependency>

        <!-- JUnit 5 = JUnit Platform + JUnit Jupiter + JUnit Vintage

            The JUnit Platform serves as a foundation for launching testing frameworks on the JVM.
            It also defines the TestEngine API for developing a testing framework that runs on the platform.
            Furthermore, the platform provides a Console Launcher to launch the platform from the command line and a JUnit 4 based
            Runner for running any TestEngine on the platform in a JUnit 4 based environment.
            First-class support for the JUnit Platform also exists in popular IDEs (see IntelliJ IDEA, Eclipse, NetBeans, and Visual Studio Code)
            and build tools (see Gradle, Maven, and Ant).

            JUnit Jupiter is the combination of the new programming model and extension model for writing tests and extensions in JUnit 5.
            The Jupiter sub-project provides a TestEngine for running Jupiter based tests on the platform.

            JUnit Vintage provides a TestEngine for running JUnit 3 and JUnit 4 based tests on the platform.
        -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Even though the assertion facilities provided by JUnit Jupiter are sufficient for many testing scenarios,
             there are times when more power and additional functionality such as matchers are desired or required.
             In such cases, the JUnit team recommends the use of third-party assertion libraries such as AssertJ, Hamcrest, Truth, etc.
             Developers are therefore free to use the assertion library of their choice.
         -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <properties>
                        <configurationParameters>
                            junit.jupiter.conditions.deactivate = *
                            junit.jupiter.extensions.autodetection.enabled = true
                            junit.jupiter.testinstance.lifecycle.default = per_class
                        </configurationParameters>
                    </properties>
                    <excludes>
                        <exclude/>
                        <groups>acceptance | !feature-a</groups>
                        <excludedGroups>integration, regression</excludedGroups>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
        </plugins>
    </build>
</project>